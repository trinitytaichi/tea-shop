@mixin circle {
  border-radius: 50%;
}

@mixin vertical-rl {
  writing-mode: vertical-rl;
  letter-spacing: $vertical-letter-spacing;
}

.animate-start {
  animation-play-state: running !important;
}

.animate-pause {
  animation-play-state: paused !important;
}

.outline-0 {
  outline: none;

  &:focus {
    outline: none;
  }
}

.opacity {
  opacity: 0;
}

.object-cover {
  object-fit: cover;
}

.hover-shadow:hover {
  box-shadow: $box-shadow;
}

.border-crude {
  border-width: 2px !important;
}

@each $key, $val in $grid-breakpoints {
  // font size
  @each $size-name, $font-size in $font-sizes {
    .fs-#{$size-name} {
      font-size: #{$font-size} !important;
    }
    @media (min-width: $val) {
      .fs-#{$key}-#{$size-name} {
        font-size: #{$font-size} !important;
      }
    }
  }

  // toggle border
  $directions: "top", "right", "bottom", "left";
  @each $direction in $directions {
    @media (min-width: $val) {
      .border-#{$key}-0 {
        border: none;
      }
      .border-#{$direction}-#{$key}-0 {
        border-#{$direction}: none !important;
      }
      .border-#{$key}-#{$direction} {
        border-#{$direction}: 1px solid !important;
      }
    }
  }

  @each $name, $color in $text-grays {
    .text-#{$name} {
      color: #{$color};
    }
    @media (min-width: $val) {
      .text-#{key}-$name {
        color: #{$color};
      }
    }
  }

  // vertical
  .vertical-rl {
    writing-mode: vertical-rl;
    letter-spacing: $vertical-letter-spacing;
  }
  @media (min-width: $val) {
    .vertical-#{$key}-rl {
      writing-mode: vertical-rl;
      letter-spacing: $vertical-letter-spacing;
    }
  }
}

@each $name, $color in $theme-colors {
  .border-#{$name} {
    border-color: $color;
  }
}
